name: Publish Go Binary

# 触发条件：在 push 到 main 分支后
on:
  push:
    branches:
      - main
env:
  GITHUB_TOKEN: ${{ secrets.GOACTION }}      
jobs:
  buildAndDeploy:
    runs-on:  ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # 交叉构建,多平台交叉编译
#    strategy:
#      matrix:
#        include:
#          - goarch: amd64
#            goos: linux
#          - goarch: amd64
#            goos: darwin
#          - goarch: arm64
#            goos: linux
#          - goarch: arm64
#            goos: darwin
#          - goarch: amd64
#            goos: windows
#    # 使用checkout
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with: 
        go-version: '>=1.20.0'
    - run: go version
    - name: make
      run: make build-all
#      env:
#        GOOS: ${{ matrix.goos }}
#        GOARCH: ${{ matrix.goarch }}
#    - name: Packaging...
#      run: tar czf filetransfer-${{ matrix.goos }}-${{ matrix.goarch }}.tgz server/server client/client
    - name: Get version
      id: version
      run: echo "version=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@latest
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ steps.version.outputs.version }}
#        release_name: Release ${{ steps.version.outputs.version }}
#        draft: false
#        prerelease: false
#      run: echo "::set-output name=version::$(git rev-parse --short HEAD)"
    - name: Gets latest created release info
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag:  ${{ steps.version.outputs.version }}
          prerelease: false
          title: "Release New"
          files: |
            ./server/filetransfer-server*
            ./client/filetransfer-client*
#    - name: Uploading assets...
#      # if: ${{ !env.ACT }}
#      # id: upload-release-asset
#      uses: actions/upload-release-asset@latest
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./filetransfer-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
#        asset_name: filetransfer-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
#        asset_content_type: application/gzip
